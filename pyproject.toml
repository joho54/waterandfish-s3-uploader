[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "s3-uploader"
dynamic = ["version"]
description = "미디어파이프 시퀀스 추출 및 S3 스트리밍 업로드 파이프라인"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "SaturdayDinner", email = "your-email@example.com"}
]
maintainers = [
    {name = "SaturdayDinner", email = "your-email@example.com"}
]
keywords = [
    "mediapipe",
    "pose-detection", 
    "sign-language",
    "s3",
    "aws",
    "video-processing",
    "machine-learning",
    "computer-vision"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Video",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "mediapipe>=0.10.0",
    "opencv-python>=4.8.0",
    "boto3>=1.28.0",
    "numpy>=1.21.0",
    "tqdm>=4.64.0",
    "pandas>=1.5.0",
    "botocore>=1.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]
gpu = [
    "tensorflow>=2.10.0",
]

[project.scripts]
s3-uploader = "s3_uploader.mediapipe_s3_streaming_pipeline:main"
s3-uploader-config = "s3_uploader.pipeline_config:create_config_file"

[project.urls]
Homepage = "https://github.com/your-username/s3-uploader"
Documentation = "https://github.com/your-username/s3-uploader#readme"
Repository = "https://github.com/your-username/s3-uploader"
"Bug Tracker" = "https://github.com/your-username/s3-uploader/issues"

[tool.setuptools_scm]
write_to = "_version.py"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=s3_uploader",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
] 